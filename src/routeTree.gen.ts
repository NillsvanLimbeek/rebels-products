/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductIdImport } from './routes/product/$id'

// Create Virtual Routes

const WishlistsLazyImport = createFileRoute('/wishlists')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WishlistsLazyRoute = WishlistsLazyImport.update({
  id: '/wishlists',
  path: '/wishlists',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wishlists.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProductIdRoute = ProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/wishlists': {
      id: '/wishlists'
      path: '/wishlists'
      fullPath: '/wishlists'
      preLoaderRoute: typeof WishlistsLazyImport
      parentRoute: typeof rootRoute
    }
    '/product/$id': {
      id: '/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof ProductIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/wishlists': typeof WishlistsLazyRoute
  '/product/$id': typeof ProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/wishlists': typeof WishlistsLazyRoute
  '/product/$id': typeof ProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/wishlists': typeof WishlistsLazyRoute
  '/product/$id': typeof ProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/wishlists' | '/product/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/wishlists' | '/product/$id'
  id: '__root__' | '/' | '/wishlists' | '/product/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  WishlistsLazyRoute: typeof WishlistsLazyRoute
  ProductIdRoute: typeof ProductIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  WishlistsLazyRoute: WishlistsLazyRoute,
  ProductIdRoute: ProductIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/wishlists",
        "/product/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/wishlists": {
      "filePath": "wishlists.lazy.tsx"
    },
    "/product/$id": {
      "filePath": "product/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
